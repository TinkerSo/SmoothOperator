<launch>

    <!-- Static transform from base_link to base_laser -->
    <node pkg="tf" type="static_transform_publisher" name="base_laser_to_base_link" args="0 0 1.225 0 0 0 base_link base_laser 100"/>

    <!-- Static transform from odom to base_link -->
    <!-- node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 .18 1.185 0 0 0 odom base_link 100" -->

    <!-- Rplidar node that publishes lidar data to /scan with message type /sensor_msgs/LaserScan -->
    <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <param name="frame_id"            type="string" value="base_laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
    </node>

    <!-- Odometry_fusion node -->
    <node pkg="odometry_fusion" type="odometry_fusion.py" name="odometry_fusion" output="screen"/>

    <!-- Odometry_fusion_publisher node -->
    <node pkg="odometry_fusion_publisher" type="odometry_fusion_publisher.py" name="odometry_fusion_publisher" output="screen"/>

    <node pkg="costmap_2d" type="costmap_2d_markers" name="voxel_visualizer">
      <remap from="voxel_grid" to="costmap/voxel_grid"/>
    </node>

    <!--node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node" -->
      <!--rosparam file="/home/smoothoperator/catkin_ws/src/smoothoperator/config/costmap_2d_params.yaml" command="load" ns="costmap" -->

</launch>
